apiVersion: v1
kind: Namespace
metadata:
  name: {{ dex_namespace }}
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: dex
  namespace: kube-system
spec:
  chart: dex
  targetNamespace: {{ dex_namespace }}
  repo: https://charts.dexidp.io
  valuesContent: |-
    config:
      issuer: "https://{{ dex_hostname }}"
      web:
        http: 0.0.0.0:5556
      storage:
        type: kubernetes
        config:
          inCluster: true
      connectors:
      - type: github
        id: github
        name: GitHub
        config:
          clientID: '{{ dex_github_client_id }}'
          clientSecret: '{{ dex_github_client_secret }}'
          redirectURI: "https://{{ dex_hostname }}/callback"
          orgs:
            {{ dex_github_orgs | to_yaml | indent(12) }}
      oauth2:
        skipApprovalScreen: true
      staticClients:
      - id: epinio-api
        name: 'Epinio API'
        public: true
        # The 'Epinio API' lets the 'Epinio cli' issue ID tokens on its behalf.
        # https://dexidp.io/docs/custom-scopes-claims-clients/#cross-client-trust-and-authorized-party
        trustedPeers:
        - epinio-cli
        - epinio-ui
      - id: epinio-cli
        name: 'Epinio cli'
        public: true
      - id: epinio-ui
        name: 'Epinio UI'
        secret: {{ dex_client_secret }}
        # Shouldn't be public, https://dexidp.io/docs/custom-scopes-claims-clients/#public-clients
        redirectURIs:
        - {{ epinio_hostname }}/auth/verify/
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-acme-issuer
        kubernetes.io/ingress.class: "{{ kubeapps_k8s_ingress_class }}"
        traefik.frontend.passHostHeader: "true"
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
      - host: {{ dex_hostname }}
        paths:
          - path: /
            pathType: ImplementationSpecific
      tls:
        - secretName: {{ dex_hostname }}-tls
          hosts:
            - {{ dex_hostname }}

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  # annotations:
  name: dex-config
  namespace: {{ dex_namespace }}
stringData:
  issuer: https://{{ dex_hostname }}
  endpoint: "http://dex.{{ dex_namespace }}.svc.cluster.local:5556"
  uiClientSecret: {{ dex_client_secret }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeapps-github-teams
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: Group
    name: "{{ dex_github_client_org }}:{{ dex_github_client_team }}"
