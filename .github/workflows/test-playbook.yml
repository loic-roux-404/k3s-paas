
name: Molecule Test
on:
  pull_request:
    branches:
      - main
    paths:
      - 'playbook/**'
      - .github/workflows/test-playbook.yml
jobs:
  build:
    runs-on: macos-latest
    if: contains(github.event.pull_request.title, 'enable-molecule')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.2
          cache: 'pip'
          cache-dependency-path: '**/requirements*.txt'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
        working-directory: playbook

      - uses: actions/cache@v3
        with:
          path: |
            ~/.ansible/collections/ansible_collections
            ~/.ansible/roles
          key: ${{ runner.os }}-ansible-${{ hashFiles('playbook/requirements.yaml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-

      - name: Install ansible dependencies
        run: |
          ansible-galaxy collection install -r requirements.yaml
          ansible-galaxy role install -r requirements.yaml
        working-directory: playbook

      - name: Set outputs
        id: vars
        run: echo "brew_prefix=$(brew --prefix)" >> $GITHUB_OUTPUT

      - name: brew update
        run: brew update && brew upgrade || true

      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: "${{ steps.vars.outputs.brew_prefix }}/Library/Caches/Homebrew/"
          key: brew-dnsmasq-docker
          restore-keys: brew-

      - name: Install Homebrew dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install dnsmasq

      - name: Setup dnsmasq
        run: ./scripts/setup_dnsmasq.sh
        working-directory: playbook/roles/waypoint

      - run: dig +short k3s.test

      - run: ping -c 1 k3s.test

      - name: Setup vault secret
        run: echo "$ANSIBLE_VAULT_PASSWORD" > ~/.ansible/.vault      
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      - name: Molecule
        run: molecule test -- --skip-tags=metallb --extra-vars="k3s_disable_services=[traefik]"
        working-directory: playbook/roles/waypoint
