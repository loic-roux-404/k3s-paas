name: Release Nix image
on:
  push:
    tags:
      - nixos-stable
      - nixos-testing
    paths:
      - 'nixos/**.nix'
      - 'nixos-options/**.nix'
      - flake.nix
      - flake.lock
      - .github/workflows/release-nixos.yml

permissions:
  contents: write
  discussions: write

jobs:
  gh-release-packer:
    runs-on: ubuntu-latest
    name: Release nix image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: cachix/install-nix-action@v25
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824

      - name: Build production image
        id: build-stable
        if: github.ref == 'refs/tags/nixos-stable'
        run: nix build .#nixosConfigurations.initial-contabo.config.formats.qcow
        
      - name: Build testing image
        id: build-testing
        if: github.ref == 'refs/tags/nixos-testing'
        run: nix build .#nixosConfigurations.initial.config.formats.qcow

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          token: "${{ secrets.GITHUB_TOKEN }}"
          generate_release_notes: true
          files: |
            result/nixos.qcow2
