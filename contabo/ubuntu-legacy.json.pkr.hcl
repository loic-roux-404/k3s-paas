# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "accelerator" {
  type    = string
  default = "kvm"
}

variable "cpus" {
  type    = string
  default = "4"
}

variable "disk_size" {
  type    = string
  default = "51200"
}

variable "headless" {
  type    = string
  default = "false"
}

variable "memory" {
  type    = string
  default = "8192"
}

variable "name" {
  type    = string
  default = "${env("NAME")}"
}

variable "packer_images_output_dir" {
  type    = string
  default = "${env("PACKER_IMAGES_OUTPUT_DIR")}"
}

variable "packer_templates_logs" {
  type    = string
  default = "/tmp"
}

variable "preseed_file_name" {
  type    = string
  default = "my-preseed.cfg"
}

variable "ssh_password" {
  type    = string
  default = "vagrant"
}

variable "ssh_username" {
  type    = string
  default = "vagrant"
}

variable "ubuntu_images_url" {
  type    = string
  default = "${env("UBUNTU_IMAGES_URL")}"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "qemu" "autogenerated_1" {
  accelerator      = "${var.accelerator}"
  boot_command     = ["<tab>", "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ubuntu-server/${var.preseed_file_name} ", "auto=true ", "net.ifnames=0 ", "hostname=localhost ", "<enter>"]
  boot_wait        = "10s"
  cpus             = "${var.cpus}"
  disk_size        = "${var.disk_size}"
  headless         = "${var.headless}"
  http_directory   = "http"
  iso_checksum     = "file:${var.ubuntu_images_url}/SHA256SUMS"
  iso_urls         = ["${var.ubuntu_images_url}/netboot/mini.iso"]
  memory           = "${var.memory}"
  output_directory = "${var.name}-qemu"
  shutdown_command = "echo 'vagrant' | sudo -S shutdown -P now"
  ssh_password     = "${var.ssh_password}"
  ssh_timeout      = "1h"
  ssh_username     = "${var.ssh_username}"
  vm_name          = "${var.name}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.qemu.autogenerated_1"]

  provisioner "shell" {
    execute_command = "echo 'vagrant' | sudo -S -E bash '{{ .Path }}'"
    scripts         = ["scripts/linux-common/vagrant.sh", "scripts/ubuntu/update.sh", "scripts/ubuntu/add_libpam-systemd.sh", "scripts/ubuntu/disable_apt-daily.sh", "scripts/ubuntu/virtualbox-guest.sh"]
  }

  provisioner "ansible" {
    ansible_env_vars = ["ANSIBLE_CONFIG=ansible/ansible.cfg"]
    extra_arguments  = ["--become", "--extra-vars", "packer_build_name=${var.name}"]
    playbook_file    = "ansible/site.yml"
    user             = "vagrant"
  }

  provisioner "shell" {
    execute_command = "sudo -E bash '{{ .Path }}'"
    scripts         = ["scripts/linux-common/packer-virt-sysprep/sysprep-op-dhcp-client-state.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-logfiles.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-machine-id.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-package-manager-cache.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-ssh-hostkeys.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-tmp-files.sh", "scripts/linux-common/packer-virt-sysprep/sysprep-op-disk-space.sh"]
  }

  post-processor "vagrant" {
    compression_level    = 9
    output               = "${var.packer_images_output_dir}/${var.name}-<no value>.box"
    vagrantfile_template = "Vagrantfile-linux.template"
  }
}
